====================================AWS-EKS-CLI-Installation ======================================

******************** Add role in created INSTANCE *********************
Create 1 instance c2-medium(ami-ubuntu) [name] master-eks (NOTE) 2CPU and 4GB Ram atleast required.....
Go to Instance and add role in roll add two policies
1 AmazonEKSClusterPolicy
2 AdministratorAccess
attched thoes policies to the the created roll 

*******************(1) first install docker ************************************

#sudo apt-get update
#sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
#sudo mkdir -p /etc/apt/keyrings
#curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#sudo apt-get update
#sudo chmod a+r /etc/apt/keyrings/docker.gpg
#sudo apt-get update -y
#sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

******************(2) second install eksctl *********************************************************************************************************************

The eksctl tool uses CloudFormation under the hood, creating one stack for the EKS master control plane and another stack for the worker nodes.

Download and extract the latest release of eksctl with the following command.

#curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp

Move the extracted binary to /usr/local/bin. 

#sudo mv /tmp/eksctl /usr/local/bin

#eksctl version 

**********************(3) third install kubectl ********************************************************************************************************************

Kubernetes uses a command line utility called kubectl for communicating with the cluster API server. It is tool for controlling Kubernetes clusters. kubectl looks for a file named config in the $HOME directory.



#sudo curl --silent --location -o /usr/local/bin/kubectl   https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl



#sudo chmod +x /usr/local/bin/kubectl 

Verify if kubectl got installed

#kubectl version --short --client 

************************** Now install cluster ***********************************************************************************************************************

#eksctl create cluster --name demo-cluster --region us-east-1 --nodegroup-name my-nodes --node-type t2.medium --managed --nodes 2

eksctl create cluster --name (to create cluster) give name to cluster (demo-cluster)
--region us-east-1 (to give region)
--nodegroup-name my-nodes()
--node-type t2.medium(node type)
--managed --nodes 2(no. of nodes)



(if error occured after above command then follow below steps)

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 

sudo apt install unzip

sudo unzip awscliv2.zip  

sudo ./aws/install

aws --version

************************************** delete cluster *********************************************************************************************************************

#eksctl delete cluster --name demo-cluster --region us-east-1


************************************** To create manifest ******************************************************************************************************************

# vim pod.yml
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - name: nginx
    image: nginx:1.14.2
    ports:
    - containerPort: 80
:wq

# kubectl apply -f pod.yml (this command use to create pods)
# kubectl describe pod (to see details of pod and Ip also)
# kubectl get pod (to see created pods)
# kubectl get node (to see node)























































