SERVICES
1.cluster Ip
2.Node-port
3.Load balancer
............................ ...................................   ................................  ............................................
In Kubernetes, there are several types of services that can be used to manage networking between pods and applications. These include:

ClusterIP: This is the default service type in Kubernetes, which exposes the service on a cluster-internal IP address. 
This type of service is useful for accessing internal services within the cluster.

NodePort: This type of service exposes the service on a static port on each node's IP address. 
This enables external access to the service, but it is not suitable for production environments.

LoadBalancer: This type of service is used to expose the service externally and automatically creates a load balancer in a cloud environment.

ExternalName: This type of service is used to provide a DNS name for an external service outside the cluster.
..................... .........................................
1. ------vim pod .yaml
2.kubectl apply -f pod.yaml
3.vim deployment.yaml
4.kubectl apply -f deployment.yaml
5.kubectl get all
--------------creation of service -cluster Ip----------
{note-by default always we get cluster Ip}
6. vim cluster.yaml
apiVersion: v1
kind: Service
metadata:
  name: cluster
spec:
  selector:
    app: my-app
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
7. kubectl apply -f cluster.yaml
--------------creation of service -node-port -----
8. vim node.yaml
apiVersion: v1
kind: Service
metadata:
  name: nodeportservice
spec:
  selector:
    app: my-app
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
9.kubectl apply -f node.yaml
--------creation of service -Loadbalancer ----
10. vim lb.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-lb
spec:
  selector:
    app: my-app
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
11. kubectl apply -f lb.yaml
12. kubectl get all
service/cluster             ClusterIP      10.100.231.245   <none>                                                                    80/TCP         7m16s
service/kubernetes        ClusterIP      10.100.0.1       <none>                                                                    443/TCP        49m
service/my-lb                LoadBalancer   10.100.76.72     a30b3eaf6edf0420b83ed66569d18b51-1374325599.us-east-2.elb.amazonaws.com   80:30231/TCP   8m38s
service/nodeportservice    NodePort       10.100.229.13    <none>                                                                    80:31426/TCP   9m24s

13. curl <loadbalancerdns>
 14. hit Lbdns on google ----it will shows nginx page









